class Solution {
public:
    bool wordPattern(string pattern, string s) {
        stringstream ss(s);
        vector<string> v;
        while (getline(ss, s, ' ')) {
            v.push_back(s);
        }

        if (pattern.length() != v.size()) {
            return false;
        }

        unordered_map<char, int> mp1;
        unordered_map<string, int> mp2;

        for (int i = 0; i < pattern.length(); ++i) {
            if (mp1[pattern[i]] != mp2[v[i]]) {
                return false;
            }

            mp1[pattern[i]] = mp2[v[i]] = i + 1;
        }

        return true;
    }
};
