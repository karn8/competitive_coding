class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if (p==NULL|| q==NULL) return p==q;
        if (p->val!=q->val) return 0;
        bool L=isSameTree(p->left, q->left);
        bool R=isSameTree(p->right, q->right);
        return L && R;
    }
};

//----------------------postorder approach !! check for BST---------------

'''
class Solution {
public:
    void postorder(TreeNode* p, vector<int> order){
        if (p == NULL){
            order.push_back(0);
            return;
        }

        postorder(p->left, order);

        postorder(p->right, order);

        order.push_back(p->val);
    }

    bool isSameTree(TreeNode* p, TreeNode* q){
        vector<int> tree1;
        vector<int> tree2;

        postorder(p, tree1);
        postorder(q, tree2);

        return tree1==tree2;
    }
}; '''
